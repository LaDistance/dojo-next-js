import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import styles from "./index.module.css";

import { useEffect, useState } from "react";
import MovieCard from "../components/cards/MovieCard";
import { IMovie } from "../types/movie";
import { api } from "../utils/api";

const Home: NextPage = () => {
  const [movies, setMovies] = useState<IMovie[] | null>(null);

  useEffect(() => {
    const fetchData = async () => {
      const response = await fetch("/api/movies/popular");
      const data = await response.json();
      setMovies(data.results);
    };

    fetchData().catch(console.error);
  }, []);

  return (
    <>
      <Head>
        <title>MovieDB</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.showcaseContainer}>
          <AuthShowcase />
        </div>
        <div className={styles.container}>
          <h1 className={styles.title}>MovieDB</h1>
          <div className={styles.cardRow}>
            {movies?.map((movie) => (
              <Link href="" key={movie.title + movie.release_date}>
                <MovieCard movie={movie} />
              </Link>
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className={styles.authContainer}>
      <p className={styles.showcaseText}>
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className={styles.loginButton}
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
